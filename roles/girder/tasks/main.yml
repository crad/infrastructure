---
- name: add nodejs ppa
  apt_repository: repo='ppa:chris-lea/node.js'
  sudo: yes
  tags: girder

- name: update apt cache
  apt: update_cache=yes
  sudo: yes
  tags: girder

- name: install package dependencies
  apt: name={{ item }} state=present
  sudo: yes
  with_items:
    - python-pip
    - python2.7-dev
    - build-essential
    - python-software-properties
    - libffi-dev
    - nodejs
    - nginx
    - cmake
    - git
  tags: girder

- name: clone girder
  git: repo=git://github.com/girder/girder.git dest={{ girder_root }} accept_hostkey=yes
  tags:
    - girder
    - girder-update

- name: clone covalic plugin
  git: repo=git://github.com/zachmullen/xtk_demo.git dest={{ girder_root }}/plugins/covalic accept_hostkey=yes
  tags:
    - girder
    - girder-update

- name: install girder requirements
  pip: requirements={{ girder_root }}/requirements.txt
  sudo: yes
  tags:
    - girder
    - girder-update

- name: install grunt globally
  npm: name={{ item }} global=yes
  with_items:
    - grunt-cli
  sudo: yes
  tags: girder

- name: run npm install
  npm: path={{ girder_root }}
  tags:
    - girder
    - girder-update

- name: run grunt init
  command: grunt init chdir={{ girder_root }}
  tags:
    - girder
    - girder-update

- name: run grunt
  command: grunt chdir={{ girder_root }}
  tags:
    - girder
    - girder-update

- name: install girder for development
  command: python setup.py develop chdir={{ girder_root }}
  sudo: yes
  tags:
    - girder
    - girder-update

- name: install Girder as a service
  copy: src=girder.conf dest=/etc/init/girder.conf mode=644 owner=root
  sudo: yes
  tags: girder

- name: Start Girder as a service
  service: name=girder state=restarted enabled=yes
  sudo: yes
  tags: girder

- name: add www-data to developers so nginx can serve static content
  user: name=www-data state=present groups=developers append=yes
  sudo: yes
  tags: girder

- name: disable default nginx site
  command: rm /etc/nginx/sites-enabled/default removes=/etc/nginx/sites-enabled/default
  sudo: yes
  tags: girder

- name: add the girder nginx site
  template: src=nginx.j2 dest=/etc/nginx/sites-available/girder
  sudo: yes
  tags: girder

- name: enable girder nginx site
  command: ln -s /etc/nginx/sites-available/girder /etc/nginx/sites-enabled/girder creates=/etc/nginx/sites-enabled/girder
  sudo: yes
  tags: girder

# force a restart of nginx to pick up any changes in girder
- name: Restart nginx service
  service: name=nginx state=restarted enabled=yes
  sudo: yes
  tags:
    - girder
    - girder-update

- name: Log in as girder admin
  shell: "curl -u {{girder_admin_user}}:{{girder_admin_password}} http://{{girder_socket_host}}:{{girder_socket_port}}/api/v1/user/authentication"
  register: token_response
  tags: girder

- name: Create admin girder user if there is no token returned from login
  shell: "curl --data \"login={{girder_admin_user}}&firstName=radiomics&lastName=admin&password={{girder_admin_password}}&email={{girder_admin_email}}\" http://{{girder_socket_host}}:{{girder_socket_port}}/api/v1/user"
  register: admin_user_response
  tags: girder
  when: (token_response.stdout|from_json).authToken is not defined

# logging in again to ensure that we have a valid token regardless of previous steps
- name: Log in as girder admin after registering an admin user
  shell: "curl -u {{girder_admin_user}}:{{girder_admin_password}} http://{{girder_socket_host}}:{{girder_socket_port}}/api/v1/user/authentication"
  register: token_response
  tags: girder

- name: Enable girder plugins
  shell: "curl -X PUT --data 'plugins={{girder_plugins|to_json}}&token={{(token_response.stdout|from_json).authToken.token}}' http://{{girder_socket_host}}:{{girder_socket_port}}/api/v1/system/plugins"
  register: plugin_response
  tags: girder


#- name: Set the default assetstore to the EBS volume mountpoint
#  shell: "curl --data 'name=default&type=0&root=/opt/covalic/assetstore' -H 'Girder-Token: {{(token_response.stdout|from_json).authToken.token}}' http://{{girder_socket_host}}:{{girder_socket_port}}/api/v1/assetstore"
#  tags: girder

- name: Restart Girder as a service to have Cirder be the webapp
  service: name=girder state=restarted enabled=yes
  sudo: yes
  tags:
    - girder
    - girder-update

# force a restart of nginx to pick up any changes in girder
- name: Restart nginx service
  service: name=nginx state=restarted enabled=yes
  sudo: yes
  tags: girder
